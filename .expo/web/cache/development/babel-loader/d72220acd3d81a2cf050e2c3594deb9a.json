{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var conversation1 = {\n    contact1: '+91 99999 11111',\n    contact2: '+91 99999 22222',\n    messages: [{\n      text: 'hello',\n      sender: '+91 99999 11111',\n      timeStamp: '19 July 2022, 16:00',\n      status: 1\n    }, {\n      text: 'Hi, How are you ?',\n      sender: '+91 99999 22222',\n      timeStamp: '19 July 2022, 16:10',\n      status: 3\n    }]\n  };\n  var conversation2 = {\n    contact1: '+91 99999 11111',\n    contact2: '+91 99999 33333',\n    messages: [{\n      text: 'Aur Bhai. Kya haal ?',\n      sender: '+91 99999 11111',\n      timeStamp: '19 July 2022, 12:00',\n      status: 3\n    }, {\n      text: 'Badhiya. Tum sunao ?',\n      sender: '+91 99999 33333',\n      timeStamp: '20 July 2022, 10:00',\n      status: 1\n    }]\n  };\n  var conversation3 = {\n    contact1: '+91 99999 11111',\n    contact2: '+91 99999 44444',\n    messages: [{\n      text: 'Javascript shuru ho gyi ?',\n      sender: '+91 99999 11111',\n      timeStamp: '20 July 2022, 13:00',\n      status: 2\n    }, {\n      text: 'Haan Bhai, Recursion thoda takleef de raha hai',\n      sender: '+91 99999 44444',\n      timeStamp: '20 July 2022, 13:00',\n      status: 3\n    }]\n  };\n  var conversation4 = {\n    contact1: '+91 99999 11111',\n    contact2: '+91 99999 55555',\n    messages: [{\n      text: 'Infosys test de rhi hai ?',\n      sender: '+91 99999 11111',\n      timeStamp: '16 July 2022, 16:00',\n      status: 3\n    }, {\n      text: 'Haan, par itni tyari nhi hai.',\n      sender: '+91 99999 55555',\n      timeStamp: '16 July 2022, 16:00',\n      status: 2\n    }]\n  };\n  var conversation5 = {\n    contact1: '+91 99999 11111',\n    contact2: '+91 99999 66666',\n    messages: [{\n      text: 'Competitive Programming and soft skills course join kiya ?',\n      sender: '+91 99999 11111',\n      timeStamp: '16 July 2022, 16:00',\n      status: 2\n    }, {\n      text: 'Haan, Tune kra ?',\n      sender: '+91 99999 66666',\n      timeStamp: '16 July 2022, 16:00',\n      status: 3\n    }, {\n      text: 'Haan, Hopefully it will be fruitful',\n      sender: '+91 99999 11111',\n      timeStamp: '16 July 2022, 16:00',\n      status: 1\n    }]\n  };\n  var myWhatsApp = [conversation1, conversation2, conversation3, conversation4, conversation5];\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      i = _useState2[0],\n      setIIndex = _useState2[1];\n\n  i = i % myWhatsApp.length;\n\n  function sortConversationsBasedOnMessages(myWhatsApp) {\n    console.table(myWhatsApp);\n    var N = myWhatsApp.length;\n\n    for (var _i = 0; _i < N; _i++) {\n      for (var j = 0; j < N - _i - 1; j++) {\n        if (myWhatsApp[j][\"messages\"].length > myWhatsApp[j + 1][\"messages\"].length) {\n          var temp = myWhatsApp[j];\n          myWhatsApp[j] = myWhatsApp[j + 1];\n          myWhatsApp[j + 1] = temp;\n        }\n      }\n    }\n\n    console.table(myWhatsApp);\n    return myWhatsApp;\n  }\n\n  function sortMessagesBasedOnText() {\n    var textAdd = [];\n    var N = myWhatsApp.length;\n\n    for (var j = 0; j < N; j++) {\n      var addedText = \"\";\n\n      for (var k = 0; k < myWhatsApp[j][\"messages\"].length; k++) {\n        addedText += myWhatsApp[j][\"messages\"][k][\"text\"];\n      }\n\n      textAdd.push(addedText);\n    }\n\n    console.log(textAdd);\n\n    for (var _i2 = 0; _i2 < N; _i2++) {\n      for (var _j = 0; _j < N - _i2 - 1; _j++) {\n        if (textAdd[_j] > textAdd[_j + 1]) {\n          var temp1 = textAdd[_j];\n          textAdd[_j] = textAdd[_j + 1];\n          textAdd[_j + 1] = temp1;\n          var temp = myWhatsApp[_j];\n          myWhatsApp[_j] = myWhatsApp[_j + 1];\n          myWhatsApp[_j + 1] = temp;\n        }\n      }\n    }\n  }\n\n  function sortMessagesBasedOnlength() {\n    console.log(\"Sorting messages based on Length\");\n    var messages = [];\n\n    for (var _i3 = 0, _myWhatsApp = myWhatsApp; _i3 < _myWhatsApp.length; _i3++) {\n      var conversation = _myWhatsApp[_i3];\n\n      for (var _iterator = _createForOfIteratorHelperLoose(conversation['messages']), _step; !(_step = _iterator()).done;) {\n        var data = _step.value;\n        messages.push(data['text']);\n      }\n    }\n\n    console.table(messages);\n\n    for (var _i4 = 0; _i4 < messages.length; _i4++) {\n      for (var j = 0; j < messages.length - _i4 - 1; j++) {\n        if (messages[j].length > messages[j + 1].length) {\n          var temp = messages[j];\n          messages[j] = messages[j + 1];\n          messages[j + 1] = temp;\n        }\n      }\n    }\n\n    console.table(messages);\n  }\n\n  function chat(conversation) {\n    return conversation[\"messages\"].map(function (object) {\n      return _jsxs(View, {\n        style: {\n          width: 170\n        },\n        children: [_jsx(Text, {\n          style: styles.chatStyle,\n          children: object[\"text\"]\n        }), _jsx(Text, {\n          style: [styles.timsStampStyle],\n          children: object[\"timeStamp\"] + '\\n\\n'\n        })]\n      });\n    });\n  }\n\n  function buttons() {\n    return myWhatsApp.map(function (object) {\n      return _jsx(TouchableHighlight, {\n        onPress: function onPress(event) {\n          return setIIndex(myWhatsApp.indexOf(object));\n        },\n        underlayColor: \"white\",\n        children: _jsxs(View, {\n          style: styles.button,\n          children: [_jsx(View, {\n            style: styles.circle\n          }), _jsx(Text, {\n            style: styles.textStyle,\n            children: object[\"contact2\"]\n          })]\n        })\n      });\n    });\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(Text, {\n      style: styles.buttonsContainer,\n      children: buttons()\n    }), _jsx(Text, {\n      style: styles.chatScreen,\n      children: chat(myWhatsApp[i])\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: \"row\"\n  },\n  button: {\n    backgroundColor: \"black\",\n    padding: 20,\n    borderRadius: 20,\n    margin: 10,\n    flex: 1,\n    flexDirection: \"row\"\n  },\n  textStyle: {\n    color: \"white\"\n  },\n  buttonsContainer: {\n    width: 300\n  },\n  chatScreen: {\n    height: 400,\n    width: 200,\n    backgroundColor: \"#6495ed\",\n    borderRadius: 20,\n    padding: 20\n  },\n  chatStyle: {\n    fontWeight: 'bold'\n  },\n  timsStampStyle: {\n    alignSelf: 'flex-end',\n    fontSize: 10\n  },\n  circle: {\n    height: 40,\n    width: 40,\n    borderRadius: 20,\n    backgroundColor: \"white\",\n    margin: 5\n  }\n});","map":{"version":3,"names":["StatusBar","useState","App","conversation1","contact1","contact2","messages","text","sender","timeStamp","status","conversation2","conversation3","conversation4","conversation5","myWhatsApp","i","setIIndex","length","sortConversationsBasedOnMessages","console","table","N","j","temp","sortMessagesBasedOnText","textAdd","addedText","k","push","log","temp1","sortMessagesBasedOnlength","conversation","data","chat","map","object","width","styles","chatStyle","timsStampStyle","buttons","event","indexOf","button","circle","textStyle","container","buttonsContainer","chatScreen","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","flexDirection","padding","borderRadius","margin","color","height","fontWeight","alignSelf","fontSize"],"sources":["D:/Users/Documents/react_native/Application-development/myapp/App.tsx"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport { Button, StyleSheet, Text, TouchableHighlight, View } from 'react-native';\n\nexport default function App() {\n\n  let conversation1 = {\n    contact1: '+91 99999 11111',\n    contact2: '+91 99999 22222',\n    messages: [\n      {\n          text: 'hello',\n          sender: '+91 99999 11111',\n          timeStamp: '19 July 2022, 16:00',\n          status: 1 // 1 -> sent, 2 -> delivered, 3 -> seen\n      },\n      {\n          text: 'Hi, How are you ?',\n          sender: '+91 99999 22222',\n          timeStamp: '19 July 2022, 16:10',\n          status: 3 // 1 -> sent, 2 -> delivered, 3 -> seen\n      },\n    ]\n  };\n\n  let conversation2 = {\n    contact1: '+91 99999 11111',\n    contact2: '+91 99999 33333',\n    messages: [\n      {\n          text: 'Aur Bhai. Kya haal ?',\n          sender: '+91 99999 11111',\n          timeStamp: '19 July 2022, 12:00',\n          status: 3 // 1 -> sent, 2 -> recieved, 3 -> seen\n      },\n      {\n          text: 'Badhiya. Tum sunao ?',\n          sender: '+91 99999 33333',\n          timeStamp: '20 July 2022, 10:00',\n          status: 1 // 1 -> sent, 2 -> recieved, 3 -> seen\n      }\n    ]\n  };\n\n  let conversation3 = {\n      contact1: '+91 99999 11111',\n      contact2: '+91 99999 44444',\n      messages: [\n          {\n              text: 'Javascript shuru ho gyi ?',\n              sender: '+91 99999 11111',\n              timeStamp: '20 July 2022, 13:00',\n              status: 2 // 1 -> sent, 2 -> recieved, 3 -> seen\n          },\n          {\n              text: 'Haan Bhai, Recursion thoda takleef de raha hai',\n              sender: '+91 99999 44444',\n              timeStamp: '20 July 2022, 13:00',\n              status: 3 // 1 -> sent, 2 -> recieved, 3 -> seen\n          }\n      ]\n  };\n\n  let conversation4 = {\n      contact1: '+91 99999 11111',\n      contact2: '+91 99999 55555',\n      messages: [\n          {\n              text: 'Infosys test de rhi hai ?',\n              sender: '+91 99999 11111',\n              timeStamp: '16 July 2022, 16:00',\n              status: 3 // 1 -> sent, 2 -> recieved, 3 -> seen\n          },\n          {\n              text: 'Haan, par itni tyari nhi hai.',\n              sender: '+91 99999 55555',\n              timeStamp: '16 July 2022, 16:00',\n              status: 2 // 1 -> sent, 2 -> recieved, 3 -> seen\n          }\n      ]\n  };\n\n  let conversation5 = {\n      contact1: '+91 99999 11111',\n      contact2: '+91 99999 66666',\n      messages: [\n          {\n              text: 'Competitive Programming and soft skills course join kiya ?',\n              sender: '+91 99999 11111',\n              timeStamp: '16 July 2022, 16:00',\n              status: 2 // 1 -> sent, 2 -> recieved, 3 -> seen\n          },\n          {\n              text: 'Haan, Tune kra ?',\n              sender: '+91 99999 66666',\n              timeStamp: '16 July 2022, 16:00',\n              status: 3 // 1 -> sent, 2 -> recieved, 3 -> seen\n          },\n          {\n              text: 'Haan, Hopefully it will be fruitful',\n              sender: '+91 99999 11111',\n              timeStamp: '16 July 2022, 16:00',\n              status: 1 // 1 -> sent, 2 -> recieved, 3 -> seen\n          }\n      ]\n  };\n  let myWhatsApp = [conversation1, conversation2, conversation3, conversation4, conversation5];\n  \n  let [i, setIIndex] = useState(0);\n  i = i%myWhatsApp.length;\n\n  function sortConversationsBasedOnMessages(myWhatsApp: any) {\n    console.table(myWhatsApp);\n    let N = myWhatsApp.length;\n    for(let i=0; i<N; i++) {\n        for(let j=0; j<N-i-1; j++) {\n            if(myWhatsApp[j][\"messages\"].length > myWhatsApp[j+1][\"messages\"].length) {\n                let temp = myWhatsApp[j];\n                myWhatsApp[j] = myWhatsApp[j+1];\n                myWhatsApp[j+1] = temp;\n            }\n        }\n    }\n    console.table(myWhatsApp)\n    return myWhatsApp;\n  }\n\n  function sortMessagesBasedOnText() {\n    let textAdd = []\n    let N = myWhatsApp.length;\n    for(let j=0; j<N; j++) {\n        let addedText = \"\";\n        for(let k=0; k<myWhatsApp[j][\"messages\"].length; k++) {\n            addedText += myWhatsApp[j][\"messages\"][k][\"text\"];\n        }\n        textAdd.push(addedText);\n    }\n    console.log(textAdd);\n\n    for(let i=0; i<N; i++) {\n        for(let j=0; j<N-i-1; j++) {\n            if(textAdd[j] > textAdd[j+1]) {\n                let temp1: any = textAdd[j];\n                textAdd[j] = textAdd[j+1];\n                textAdd[j+1] = temp1;\n\n                let temp = myWhatsApp[j];\n                myWhatsApp[j] = myWhatsApp[j+1];\n                myWhatsApp[j+1] = temp;\n            }\n        }\n    }\n  }\n\n  function sortMessagesBasedOnlength() {\n    console.log(\"Sorting messages based on Length\");\n    let messages = [];\n    for(let conversation of myWhatsApp) {\n        for(let data of conversation['messages']) {\n            messages.push(data['text']);\n        }\n    }\n    console.table(messages);\n    for(let i=0; i<messages.length; i++) {\n        for(let j=0; j<messages.length - i -1; j++) {\n            if(messages[j].length > messages[j+1].length) {\n                let temp: any = messages[j];\n                messages[j] = messages[j+1];\n                messages[j+1] = temp;\n            }\n        }\n    }\n    console.table(messages);\n  }\n  \n  function chat(conversation: any) {\n    return conversation[\"messages\"].map((object: any) => {\n      return <View style= {{width: 170}}>\n        <Text style = {styles.chatStyle}>{object[\"text\"]}</Text>\n        <Text style = {[styles.timsStampStyle]}>{object[\"timeStamp\"]+'\\n\\n'}</Text>\n      </View>\n\n    })\n  }\n\n  function buttons() {\n    return myWhatsApp.map((object: any) => {\n      return <TouchableHighlight onPress={(event) => setIIndex(myWhatsApp.indexOf(object))} underlayColor=\"white\">\n        <View style={styles.button}>\n          <View style={styles.circle}></View>\n          {/* <image></image> */}\n          <Text style={styles.textStyle}>{object[\"contact2\"]}</Text>\n        </View>\n      </TouchableHighlight>\n    })\n  }\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n      {/* {chat(myWhatsApp[i])} */}\n      {/* <Button title='Next' onPress={(event) => setIIndex(++i)}></Button>  */}\n      {/* {myWhatsApp = sortConversationsBasedOnMessages(myWhatsApp)} */}\n      <Text style={styles.buttonsContainer}>{buttons()}</Text>\n      <Text style={styles.chatScreen}>{chat(myWhatsApp[i])}</Text>\n    </View>\n  );\n\n  // Display messages of whatsapp \n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: \"row\",\n  },\n  button: {\n    backgroundColor: \"black\",\n    padding: 20,\n    borderRadius: 20,\n    margin: 10,\n    flex: 1,\n    flexDirection: \"row\",\n  },\n  textStyle: {\n    color: \"white\",\n  },\n  buttonsContainer: {\n    width: 300,\n  },\n  chatScreen: {\n    // flex: 1,\n    height: 400,\n    width: 200,\n    backgroundColor: \"#6495ed\",\n    // flexDirection: \"row\",\n    borderRadius: 20,\n    padding: 20,\n  },\n  chatStyle: {\n    fontWeight: 'bold',\n  },\n  timsStampStyle: {\n    // justifyContent: 'flex-end',\n    alignSelf: 'flex-end',\n    fontSize: 10,\n  },\n  circle: {\n    height: 40,\n    width: 40,\n    borderRadius: 20,\n    backgroundColor: \"white\",\n    margin: 5,\n  }\n});\n\n// export default function App() {\n\n//   const quotes = [\n//     \"Search the candle rather cursing the darkness.\",\n//     \"Be Exceptional\",\n//     \"Work hard, Be successful\",\n//     \"Work with joy and fill in joy\"\n//   ];\n\n//   const [idx, setIndex] = useState(0); // Stateful Screen\n//   var i = idx%(quotes.length); // initially \n\n//   if(i < 0) {\n//     i = quotes.length-1;\n//   }\n  \n//   return (\n//     <View style={styles.container}>\n//       <StatusBar style=\"auto\" />\n//       <Text style={styles.textStyle}>{quotes[i]}</Text>\n//       <Button title='Next Quote' onPress={(event) => setIndex(++i)}></Button> \n//       <Button accessibilityLabel='Hi' title='Previous Quote' onPress={(event) => setIndex(--i)}></Button> \n//     </View>\n//   );\n\n//   // return (\n//   //   <View style={styles.container}>\n//   //     <Text>Welcome to React Native with Expo</Text>\n//   //     <StatusBar style=\"auto\" />\n//   //   </View>\n//   // );\n\n//   // Display messages of whatsapp \n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: '#fff',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//   },\n\n//   textStyle: {\n//     color: \"red\",\n//     margin: 20,\n//     fontSize: 25,\n//   }\n// });\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}